{"version":3,"file":"static/js/742.1c822a73.chunk.js","mappings":"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","sources":["utils/passwordStrength.ts","utils/generatePassword.ts","utils/copyToClipboard.ts","components/password/PasswordGenerator.tsx","components/buttons/ThemeSwitch.tsx","utils/tabClose.ts","components/buttons/WindowBack.tsx","components/footer/Social.tsx","components/buttons/FacebookShare.tsx","components/buttons/TwitterShare.tsx","components/buttons/UrlShare.tsx","components/footer/Share.tsx","pages/Tabs/Settings.tsx","pages/Tabs/History.tsx","pages/Home.tsx"],"sourcesContent":["import { PasswordStrengthType } from \"../components/types/PasswordAttributesType\";\r\n\r\nconst passwordStrength = (password: string): PasswordStrengthType => {\r\n  const RED = \"#FF0000\";\r\n  const ORANGE = \"#F94C10\";\r\n  const YELLOW = \"#FED049\";\r\n  const GREEN = \"#82CD47\";\r\n  const DARK_GREEN = \"#379237\";\r\n\r\n  let score = 0;\r\n  const regexChecks: RegExp[] = [\r\n    /[A-Z]/, // Uppercase letters\r\n    /[a-z]/, // Lowercase letters\r\n    /[0-9]/, // Numbers\r\n    /[^A-Za-z0-9]/, // Symbols\r\n  ];\r\n\r\n  regexChecks.forEach((regex) => {\r\n    if (regex.test(password)) {\r\n      score++;\r\n    }\r\n  });\r\n\r\n  const strength: PasswordStrengthType = {\r\n    message: \"\",\r\n    color: \"\",\r\n    level: score,\r\n  };\r\n\r\n  const len = password.length;\r\n  if (len < 3) {\r\n    strength.message = \"Very Weak\";\r\n    strength.color = RED;\r\n  }\r\n  if (score === 1 && len <= 4) {\r\n    strength.message = \"Very Weak\";\r\n    strength.color = RED;\r\n  } else if ((score === 1 && len <= 8) || (score === 2 && len <= 4)) {\r\n    strength.message = \"Weak\";\r\n    strength.color = ORANGE;\r\n  } else if (\r\n    (score === 1 && len <= 12) ||\r\n    (score === 2 && len <= 6) ||\r\n    (score === 3 && len <= 4)\r\n  ) {\r\n    strength.message = \"Moderate\";\r\n    strength.color = YELLOW;\r\n  } else if (\r\n    (score === 1 && len <= 16) ||\r\n    (score === 2 && len <= 10) ||\r\n    (score === 3 && len <= 8) ||\r\n    (score === 4 && len <= 6)\r\n  ) {\r\n    strength.message = \"Strong\";\r\n    strength.color = GREEN;\r\n  } else if (\r\n    (score === 1 && len > 16) ||\r\n    (score === 2 && len > 10) ||\r\n    (score === 3 && len > 8) ||\r\n    (score === 4 && len > 6)\r\n  ) {\r\n    strength.message = \"Very Strong\";\r\n    strength.color = DARK_GREEN;\r\n  }\r\n\r\n  return strength;\r\n};\r\n\r\n// Test the password strength checker function\r\n// const password = \"MyP@ssw0rd\";\r\n// const passwordStrength = getPasswordStrength(password);\r\n// console.log(passwordStrength);\r\n\r\nexport default passwordStrength;\r\n","import {\r\n  PasswordAttributesType,\r\n  ProPasswordReturnType,\r\n} from \"../components/types/PasswordAttributesType\";\r\nimport passwordStrength from \"./passwordStrength\";\r\n\r\nconst generatePassword = (\r\n  attributes: PasswordAttributesType\r\n): ProPasswordReturnType => {\r\n  const charset = {\r\n    upper: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\r\n    lower: \"abcdefghijklmnopqrstuvwxyz\",\r\n    symbol: \"!@#$%^&*()_+-=[]{}|;:,.<>?\",\r\n    number: \"0123456789\",\r\n  };\r\n\r\n  let password = \"\";\r\n  let characters = \"\";\r\n\r\n  if (\r\n    !attributes.upper &&\r\n    !attributes.lower &&\r\n    !attributes.symbol &&\r\n    !attributes.number &&\r\n    attributes.salt.length > 0\r\n  ) {\r\n    return {\r\n      password: attributes.salt,\r\n      strength: passwordStrength(attributes.salt),\r\n    };\r\n  }\r\n\r\n  if (\r\n    !attributes.upper &&\r\n    !attributes.lower &&\r\n    !attributes.symbol &&\r\n    !attributes.number &&\r\n    attributes.salt.length === 0\r\n  ) {\r\n    return {\r\n      password: \"\",\r\n      strength: {\r\n        message: \"No character types selected and no salt provided.\",\r\n        color: \"\",\r\n        level: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  if (attributes.upper) characters += charset.upper;\r\n  if (attributes.lower) characters += charset.lower;\r\n  if (attributes.symbol) characters += charset.symbol;\r\n  if (attributes.number) characters += charset.number;\r\n\r\n  let length = Array.isArray(attributes.length)\r\n    ? attributes.length[0]\r\n    : attributes.length;\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    password += characters[Math.floor(Math.random() * characters.length)];\r\n  }\r\n\r\n  switch (attributes.saltAt) {\r\n    case \"s\":\r\n      password = attributes.salt + password;\r\n      break;\r\n    case \"e\":\r\n      password += attributes.salt;\r\n      break;\r\n    case \"b\":\r\n      const midIndex = Math.floor(password.length / 2);\r\n      password =\r\n        password.substring(0, midIndex) +\r\n        attributes.salt +\r\n        password.substring(midIndex);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const strength = passwordStrength(password);\r\n\r\n  return {\r\n    password: password,\r\n    strength: strength,\r\n  };\r\n};\r\n\r\nexport default generatePassword;\r\n","async function copyToClipboard(text: string) {\r\n  try {\r\n    await navigator.clipboard.writeText(text);\r\n    console.info(\"Copying to clipboard was successful!\");\r\n    return true;\r\n  } catch (err) {\r\n    console.error(\"Could not copy text: \", err);\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default copyToClipboard;\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  IconButton,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  Slider,\r\n  Stack,\r\n  TextField,\r\n  styled,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { chromeStoragePropsType } from \"../types/PasswordAttributesType\";\r\nimport { setPasswordAttributes } from \"../../RTK/slices/setting\";\r\nimport { HistoryItem } from \"../../RTK/slices/history\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../RTK/store\";\r\nimport { FaDice } from \"react-icons/fa\";\r\nimport { DARK } from \"../../RTK/type\";\r\nimport { useState } from \"react\";\r\n\r\nimport ContentPasteIcon from \"@mui/icons-material/ContentPaste\";\r\nimport RotateLeftIcon from \"@mui/icons-material/RotateLeft\";\r\nimport generatePassword from \"../../utils/generatePassword\";\r\nimport copyToClipboard from \"../../utils/copyToClipboard\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport \"../../globals\";\r\n\r\nconst PrettoSlider = styled(Slider)({\r\n  // color: \"rgb(0, 0, 155)\",\r\n  height: 8,\r\n  \"& .MuiSlider-track\": {\r\n    border: \"none\",\r\n  },\r\n  \"& .MuiSlider-thumb\": {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid currentColor\",\r\n    \"&:focus, &:hover, &.Mui-active, &.Mui-focusVisible\": {\r\n      boxShadow: \"inherit\",\r\n    },\r\n    \"&:before\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  \"& .MuiSlider-valueLabel\": {\r\n    lineHeight: 1.2,\r\n    fontSize: 12,\r\n    background: \"unset\",\r\n    padding: 0,\r\n    width: 32,\r\n    height: 32,\r\n    borderRadius: \"50% 50% 50% 0\",\r\n    transformOrigin: \"bottom left\",\r\n    transform: \"translate(50%, -100%) rotate(-45deg) scale(0)\",\r\n    \"&:before\": { display: \"none\" },\r\n    \"&.MuiSlider-valueLabelOpen\": {\r\n      transform: \"translate(50%, -100%) rotate(-45deg) scale(1)\",\r\n    },\r\n    \"& > *\": {\r\n      transform: \"rotate(45deg)\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PasswordGenerator() {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    activeWindow,\r\n    settingProps: { salt, passwordAttributes: pp },\r\n  } = useSelector((state: RootState) => state);\r\n  const [newPassword, setNewPassword] = useState<HistoryItem>({\r\n    time: \"\",\r\n    password: \"\",\r\n    strength: { message: \"\", color: \"\", level: 0 },\r\n  });\r\n  const [isCopy, setCopy] = useState<boolean>(false);\r\n  const small = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  const mode = theme.palette.mode;\r\n  const palette = theme.palette;\r\n  const boxShadow = `0px 3px 15px ${\r\n    mode === DARK ? \"rgb(150, 150, 150, .1)\" : \"rgb(150, 150, 150, .2)\"\r\n  }`;\r\n\r\n  const handlePP = () => {\r\n    const t = new Date();\r\n    const x = generatePassword(pp);\r\n    setNewPassword({ ...x, time: t.toISOString() });\r\n    setCopy(false);\r\n\r\n    try {\r\n      // Get the current array from storage\r\n      window.chrome.storage.sync.get(\r\n        [\"history\", \"settings\"],\r\n        function (result: chromeStoragePropsType) {\r\n          let pHistory = result.history;\r\n\r\n          // Check if the array exists. If not, initialize it\r\n          if (!pHistory) {\r\n            pHistory = [];\r\n          }\r\n\r\n          // Modify the array. For example, add a new item\r\n          pHistory.push({ ...x, time: t.toISOString() });\r\n\r\n          // Store the updated array back in storage\r\n          window.chrome.storage.sync.set({ ...result, history: pHistory });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    dispatch(\r\n      setPasswordAttributes({\r\n        ...pp,\r\n        upper: true,\r\n        lower: true,\r\n        symbol: true,\r\n        number: true,\r\n        length: 8,\r\n        salt: \"\",\r\n        saltAt: \"e\",\r\n      })\r\n    );\r\n    setCopy(false);\r\n  };\r\n\r\n  const handleCopy = async () => {\r\n    setCopy(await copyToClipboard(newPassword.password));\r\n\r\n    setTimeout(() => {\r\n      setCopy(false);\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        elevation={0}\r\n        sx={{\r\n          borderRadius: 4,\r\n          backgroundColor: palette.background.paper,\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          position: \"relative\",\r\n          transition: \".3s\",\r\n          zIndex: !activeWindow.tab ? 5 : 0,\r\n          animationDuration: activeWindow.timer || 0,\r\n        }}\r\n        className={`${!activeWindow.tab && \"windowSlideStartLeft\"} ${\r\n          activeWindow.timer && \"windowSlideEndLeft\"\r\n        } `}\r\n      >\r\n        <Stack spacing={1} sx={{ p: 1 }}>\r\n          <Box\r\n            sx={{\r\n              p: 1,\r\n              borderRadius: 2,\r\n              background: \"transparent\",\r\n              border: 2,\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              boxShadow: boxShadow,\r\n            }}\r\n          >\r\n            <Typography\r\n              variant=\"body1\"\r\n              sx={{ fontSize: \"1rem\", fontWeight: \"bold\" }}\r\n            >\r\n              {newPassword.password}\r\n            </Typography>\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}>\r\n              <IconButton\r\n                onClick={handleCopy}\r\n                title={`${isCopy ? \"Copied\" : \"Copy\"}`}\r\n                sx={{\r\n                  p: \".5\",\r\n                  m: 0,\r\n                  minWidth: \"0\",\r\n                  borderRadius: 2,\r\n                  color: `${isCopy ? \"green\" : \"\"}`,\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <ContentPasteIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={handlePP}\r\n                title={`Generate password`}\r\n                sx={{\r\n                  p: \".5\",\r\n                  m: 0,\r\n                  minWidth: \"0\",\r\n                  borderRadius: 2,\r\n                  color: palette.text.primary,\r\n                  bgcolor: palette.primary.main,\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <FaDice />\r\n              </IconButton>\r\n            </Box>\r\n          </Box>\r\n          <Typography\r\n            variant=\"body2\"\r\n            px={1}\r\n            color={newPassword.strength.color}\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              gap: 1,\r\n              opacity: newPassword.strength.message ? 1 : 0.5,\r\n            }}\r\n          >\r\n            <InfoIcon />\r\n            {newPassword.strength.message || \"Password strength\"}\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              p: 2,\r\n              borderRadius: 2,\r\n              boxShadow: boxShadow,\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h3\"\r\n                sx={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  gap: 1,\r\n                  fontSize: \"1rem\",\r\n                }}\r\n              >\r\n                Password length\r\n                <span\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    height: \"1.5rem\",\r\n                    border: \"1px solid rgb(150, 150, 150, .2)\",\r\n                  }}\r\n                ></span>\r\n                {pp.length}\r\n              </Typography>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handleReset}\r\n                title=\"Reset\"\r\n                sx={{\r\n                  gap: 1,\r\n                  borderRadius: 2,\r\n                  minWidth: 0,\r\n                  p: small ? 0.5 : \"auto\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                {!small && \"Reset\"}\r\n                <RotateLeftIcon />\r\n              </Button>\r\n            </Box>\r\n            <PrettoSlider\r\n              valueLabelDisplay=\"auto\"\r\n              aria-label=\"password length\"\r\n              value={pp.length}\r\n              min={1}\r\n              max={32}\r\n              sx={{\r\n                pt: 3,\r\n                \".MuiSlider-valueLabel\": {\r\n                  backgroundColor: palette.primary.main,\r\n                },\r\n              }}\r\n              onChange={(e, nValue) =>\r\n                dispatch(setPasswordAttributes({ ...pp, length: nValue }))\r\n              }\r\n            />\r\n          </Box>\r\n          <FormControlLabel\r\n            control={<Checkbox />}\r\n            label=\"Uppercase (A-Z)\"\r\n            labelPlacement=\"start\"\r\n            checked={pp.upper}\r\n            onChange={() =>\r\n              dispatch(setPasswordAttributes({ ...pp, upper: !pp.upper }))\r\n            }\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              pl: 1,\r\n              borderRadius: 2,\r\n              boxShadow: boxShadow,\r\n            }}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox />}\r\n            label=\"Lowercase (a-z)\"\r\n            labelPlacement=\"start\"\r\n            checked={pp.lower}\r\n            onChange={(e) =>\r\n              dispatch(setPasswordAttributes({ ...pp, lower: !pp.lower }))\r\n            }\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              pl: 1,\r\n              borderRadius: 2,\r\n              boxShadow: boxShadow,\r\n            }}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox />}\r\n            label=\"Symbols (!@#$)\"\r\n            labelPlacement=\"start\"\r\n            checked={pp.symbol}\r\n            onChange={() =>\r\n              dispatch(setPasswordAttributes({ ...pp, symbol: !pp.symbol }))\r\n            }\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              pl: 1,\r\n              borderRadius: 2,\r\n              boxShadow: boxShadow,\r\n            }}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox />}\r\n            label=\"Numbers (0-9)\"\r\n            labelPlacement=\"start\"\r\n            checked={pp.number}\r\n            onChange={() =>\r\n              dispatch(setPasswordAttributes({ ...pp, number: !pp.number }))\r\n            }\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              pl: 1,\r\n              borderRadius: 2,\r\n              boxShadow: boxShadow,\r\n            }}\r\n          />\r\n\r\n          {salt && (\r\n            <>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  alignItems: \"center\",\r\n                  p: 1,\r\n                }}\r\n              >\r\n                <Typography variant=\"body1\" fontWeight={\"bold\"}>\r\n                  Advance Settings\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box sx={{ borderRadius: 2, p: 1 }}>\r\n                <TextField\r\n                  id=\"outlined-basic\"\r\n                  label=\"Add Salt\"\r\n                  variant=\"outlined\"\r\n                  value={pp.salt}\r\n                  fullWidth\r\n                  onChange={(e) =>\r\n                    dispatch(\r\n                      setPasswordAttributes({ ...pp, salt: e.target.value })\r\n                    )\r\n                  }\r\n                  sx={{\r\n                    fieldset: { borderRadius: 2 },\r\n                  }}\r\n                />\r\n                <FormControl sx={{ p: 1, pt: 2 }}>\r\n                  <FormLabel id=\"demo-row-radio-buttons-group-label\">\r\n                    Position\r\n                  </FormLabel>\r\n                  <RadioGroup\r\n                    row\r\n                    value={pp.saltAt}\r\n                    onChange={(e) =>\r\n                      dispatch(\r\n                        setPasswordAttributes({ ...pp, saltAt: e.target.value })\r\n                      )\r\n                    }\r\n                    aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                    name=\"row-radio-buttons-group\"\r\n                  >\r\n                    <FormControlLabel\r\n                      value=\"s\"\r\n                      control={<Radio />}\r\n                      label=\"Start\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"b\"\r\n                      control={<Radio />}\r\n                      label=\"Between\"\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"e\"\r\n                      control={<Radio />}\r\n                      label=\"End\"\r\n                    />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Stack>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PasswordGenerator;\r\n","import { setThemeMode } from \"../../RTK/slices/themeMode\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { RootState } from \"../../RTK/store\";\r\nimport { DARK } from \"../../RTK/type\";\r\n\r\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\r\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nfunction ThemeSwitch() {\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const {\r\n    themeMode: { mode },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  const handleTheme = () => {\r\n    dispatch(setThemeMode(mode));\r\n  };\r\n\r\n  return (\r\n    <IconButton\r\n      sx={{ ml: 1 }}\r\n      title={`${theme.palette.mode === DARK ? \"Dark mode\" : \"Light mode\"}`}\r\n      onClick={handleTheme}\r\n      color=\"inherit\"\r\n    >\r\n      {theme.palette.mode === DARK ? <Brightness7Icon /> : <Brightness4Icon />}\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nexport default ThemeSwitch;\r\n","import { setWindowName } from \"../RTK/slices/toggleWindow\";\r\nimport { AnyAction, Dispatch } from \"@reduxjs/toolkit\";\r\n\r\ninterface backToMainTabFace {\r\n  dispatch: Dispatch<AnyAction>;\r\n  timer?: number;\r\n}\r\n\r\nconst backToMainTab = ({ dispatch, timer = 300 }: backToMainTabFace) => {\r\n  dispatch(setWindowName({ timer }));\r\n  setTimeout(() => {\r\n    dispatch(setWindowName({ tab: \"\", timer: 0 }));\r\n  }, timer);\r\n};\r\n\r\nexport default backToMainTab;\r\n","import { useDispatch } from \"react-redux\";\r\n\r\nimport NavigateBeforeIcon from \"@mui/icons-material/NavigateBefore\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport backToMainTab from \"../../utils/tabClose\";\r\n\r\nfunction WindowBack({ page = false }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleBack = () => {\r\n    backToMainTab({ dispatch });\r\n  };\r\n\r\n  return (\r\n    <IconButton title=\"Back\" onClick={() => handleBack()}>\r\n      <NavigateBeforeIcon />\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nexport default WindowBack;\r\n","import { Box, Fab, List, ListItem, Typography, useTheme } from \"@mui/material\";\r\nimport {\r\n  BiLogoFigma,\r\n  BiLogoGithub,\r\n  BiLogoLinkedin,\r\n  BiLogoTwitter,\r\n  BiWorld,\r\n} from \"react-icons/bi\";\r\n\r\nconst followUs = [\r\n  {\r\n    name: \"Twitter\",\r\n    url: \"https://twitter.com/@baliramStrikes\",\r\n    icon: <BiLogoTwitter />,\r\n  },\r\n  {\r\n    name: \"GitHub\",\r\n    url: \"https://github.com/0ME9A\",\r\n    icon: <BiLogoGithub />,\r\n  },\r\n  {\r\n    name: \"LinkedIn\",\r\n    url: \"https://linkedin.com/in/baliram-singh\",\r\n    icon: <BiLogoLinkedin />,\r\n  },\r\n  {\r\n    name: \"Figma\",\r\n    url: \"https://figma.com/@ome9a\",\r\n    icon: <BiLogoFigma />,\r\n  },\r\n  {\r\n    name: \"Portfolio\",\r\n    url: \"https://ome9a.com\",\r\n    icon: <BiWorld />,\r\n  },\r\n];\r\n\r\nfunction Social() {\r\n  const theme = useTheme();\r\n  const palette = theme.palette;\r\n\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        variant=\"h3\"\r\n        sx={{ fontSize: \"1rem\", fontWeight: \"bold\", p: 2, pt: 1 }}\r\n      >\r\n        Follow us\r\n      </Typography>\r\n      <List sx={{ display: \"flex\", gap: 1, px: 2 }}>\r\n        {followUs.map((item, i) => (\r\n          <ListItem key={i} sx={{ width: \"fit-content\", p: 0 }}>\r\n            <Fab\r\n              size=\"small\"\r\n              title={item.name}\r\n              sx={{\r\n                bgcolor: palette.background.paper,\r\n                \":hover\": { backgroundColor: palette.background.default },\r\n                boxShadow: 0,\r\n              }}\r\n            >\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                href={item.url}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  fontSize: \"1.6rem\",\r\n                  color: palette.text.primary,\r\n                }}\r\n              >\r\n                {item.icon}\r\n              </a>\r\n            </Fab>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Social;\r\n","import { IconButton } from \"@mui/material\";\r\n\r\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\r\nimport React from \"react\";\r\n\r\nconst FacebookShare: React.FC = () => {\r\n  const url = \"https://password.ome9a.com\";\r\n\r\n  const handleClick = () => {\r\n    const shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(\r\n      url\r\n    )}`;\r\n    window.open(shareUrl, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <IconButton title=\"Share on facebook\" onClick={handleClick}>\r\n      <FacebookIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default FacebookShare;\r\n","import TwitterIcon from \"@mui/icons-material/Twitter\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nconst TwitterShare = () => {\r\n  const websiteUrl = \"https://password.ome9a.com\"; // replace with your website URL\r\n  const text = \"Check out this awesome password generator website!\"; // replace with your share text\r\n  const shareUrl = `https://twitter.com/intent/tweet?url=${encodeURIComponent(\r\n    websiteUrl\r\n  )}&text=${encodeURIComponent(text)}`;\r\n\r\n  return (\r\n    <IconButton\r\n      title=\"Share on twitter\"\r\n      onClick={() => window.open(shareUrl, \"_blank\")}\r\n    >\r\n      <TwitterIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default TwitterShare;\r\n","import { IconButton } from \"@mui/material\";\r\nimport { BiLink } from \"react-icons/bi\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport copyToClipboard from \"../../utils/copyToClipboard\";\r\n\r\nconst UrlShare: React.FC = () => {\r\n  const [clipStatus, setClipStatus] = useState<boolean>(false);\r\n\r\n  const url = \"https://password.ome9a.com\";\r\n\r\n  const handleClick = async () => {\r\n    await copyToClipboard(url);\r\n    setClipStatus(true);\r\n    setTimeout(() => {\r\n      setClipStatus(false);\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <IconButton title=\"Copy Url\" onClick={handleClick}>\r\n      <BiLink style={{ color: clipStatus ? \"green\" : \"\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default UrlShare;\r\n","import { Box, List, ListItem, Typography } from \"@mui/material\";\r\n\r\nimport FacebookShare from \"../buttons/FacebookShare\";\r\nimport TwitterShare from \"../buttons/TwitterShare\";\r\nimport UrlShare from \"../buttons/UrlShare\";\r\n\r\nconst shareUs: JSX.Element[] = [\r\n  <TwitterShare />,\r\n  <FacebookShare />,\r\n  <UrlShare />,\r\n];\r\n\r\nfunction Share() {\r\n  return (\r\n    <Box>\r\n      <Typography\r\n        variant=\"h3\"\r\n        sx={{ fontSize: \"1rem\", fontWeight: \"bold\", p: 1, px: 2 }}\r\n      >\r\n        Share\r\n      </Typography>\r\n      <List sx={{ display: \"flex\", px: 2 }}>\r\n        {shareUs.map((item, i) => (\r\n          <ListItem sx={{ width: \"fit-content\", p: 0 }} key={i}>\r\n            {item}\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Share;\r\n","import {\r\n  Checkbox,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { toggleHistoryBookmark } from \"../../RTK/slices/history\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setSalt } from \"../../RTK/slices/setting\";\r\nimport { RootState } from \"../../RTK/store\";\r\nimport { SETTINGS } from \"../../RTK/type\";\r\n\r\nimport ThemeSwitch from \"../../components/buttons/ThemeSwitch\";\r\nimport WindowBack from \"../../components/buttons/WindowBack\";\r\nimport Social from \"../../components/footer/Social\";\r\nimport Share from \"../../components/footer/Share\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport React from \"react\";\r\n\r\nfunction Settings() {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    historyProps: { bookmark },\r\n    activeWindow,\r\n    settingProps: { salt },\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  const palette = theme.palette;\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        elevation={0}\r\n        sx={{\r\n          borderRadius: 4,\r\n          backgroundColor: palette.background.paper,\r\n          position: \"relative\",\r\n          top: 0,\r\n          width: \"100%\",\r\n          transition: \".3s\",\r\n          // maxHeight: \"600px\",\r\n          zIndex: activeWindow.tab === SETTINGS ? 5 : 0,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          overflow: \"hidden\",\r\n          animationDuration: activeWindow.timer || 0,\r\n        }}\r\n        className={`${\r\n          activeWindow.tab === SETTINGS && \"windowSlideStartRight\"\r\n        } ${activeWindow.timer && \"windowSlideEndRight\"} `}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            p: 1,\r\n          }}\r\n        >\r\n          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <WindowBack />\r\n            <Typography\r\n              variant=\"h2\"\r\n              sx={{ fontSize: \"1rem\", fontWeight: \"bold\", pl: 1 }}\r\n            >\r\n              Settings\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <hr style={{ opacity: 0.1 }} />\r\n\r\n        <Box>\r\n          <List sx={{ width: \"100%\" }}>\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemText\r\n                primary=\"Theme\"\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography\r\n                      sx={{ display: \"inline\" }}\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      color=\"text.primary\"\r\n                    >\r\n                      Dark Mode\r\n                    </Typography>\r\n                    {\" — Toggle to activate dark and light mode…\"}\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n              <ThemeSwitch />\r\n            </ListItem>\r\n            <ListItem\r\n              alignItems=\"flex-start\"\r\n              sx={{ borderBottom: 1, borderColor: \"rgb(150, 150, 150, .3)\" }}\r\n            >\r\n              <ListItemText\r\n                primary=\"History\"\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography\r\n                      sx={{ display: \"inline\" }}\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      color=\"text.primary\"\r\n                    >\r\n                      Password history\r\n                    </Typography>\r\n                    {\" — Bookmark history button on the header...\"}\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n              <Checkbox\r\n                checked={bookmark}\r\n                onChange={() => dispatch(toggleHistoryBookmark(!bookmark))}\r\n                inputProps={{ \"aria-label\": \"controlled\" }}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <Typography\r\n                variant=\"h3\"\r\n                sx={{ fontWeight: \"bold\", mt: 1, fontSize: \"1rem\" }}\r\n              >\r\n                Advance Settings\r\n              </Typography>\r\n            </ListItem>\r\n            <ListItem alignItems=\"flex-start\">\r\n              <ListItemText\r\n                primary=\"Salt\"\r\n                secondary={\r\n                  <React.Fragment>\r\n                    <Typography\r\n                      sx={{ display: \"inline\" }}\r\n                      component=\"span\"\r\n                      variant=\"body2\"\r\n                      color=\"text.primary\"\r\n                    >\r\n                      Salt string\r\n                    </Typography>\r\n                    {\r\n                      \" — A custom string added to the password before hashing for enhanced security...\"\r\n                    }\r\n                  </React.Fragment>\r\n                }\r\n              />\r\n              <Checkbox\r\n                checked={salt}\r\n                onChange={() => dispatch(setSalt(!salt))}\r\n                inputProps={{ \"aria-label\": \"controlled\" }}\r\n              />\r\n            </ListItem>\r\n          </List>\r\n          <Share />\r\n          <Social />\r\n        </Box>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport { chromeStoragePropsType } from \"../../components/types/PasswordAttributesType\";\r\nimport { HistoryItem } from \"../../RTK/slices/history\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { RootState } from \"../../RTK/store\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { HISTORY } from \"../../RTK/type\";\r\n\r\nimport ContentPasteIcon from \"@mui/icons-material/ContentPaste\";\r\nimport WindowBack from \"../../components/buttons/WindowBack\";\r\nimport copyToClipboard from \"../../utils/copyToClipboard\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\ninterface copyHistoryItemFace {\r\n  id: string;\r\n  password: string;\r\n}\r\n\r\nfunction History({ page = false }) {\r\n  const theme = useTheme();\r\n  const small = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const [selectHistoryItem, setSelectHistoryItem] = useState<string[]>([]);\r\n  const [historyData, setHistoryData] = useState<HistoryItem[]>([]);\r\n  const { activeWindow } = useSelector((state: RootState) => state);\r\n  const [copyPassword, setCopyPassword] = useState<copyHistoryItemFace>({\r\n    id: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const palette = theme.palette;\r\n\r\n  const handleHistoryItemSelection = (historyId: string) => {\r\n    if (selectHistoryItem.includes(historyId)) {\r\n      const uncheck = selectHistoryItem.filter((id) => id !== historyId);\r\n      setSelectHistoryItem(uncheck);\r\n    } else {\r\n      setSelectHistoryItem((prev) => [...prev, historyId]);\r\n    }\r\n  };\r\n\r\n  const handleSelectAll = () => {\r\n    const allHistoryId = historyData.map((item) => item.time);\r\n    if (historyData.length === selectHistoryItem.length) {\r\n      setSelectHistoryItem([]);\r\n      return;\r\n    }\r\n    setSelectHistoryItem(allHistoryId);\r\n  };\r\n\r\n  const handleCopy = async ({ id, password }: copyHistoryItemFace) => {\r\n    await copyToClipboard(password);\r\n    setCopyPassword({ id, password });\r\n\r\n    setTimeout(() => {\r\n      setCopyPassword({ id: \"\", password: \"\" });\r\n    }, 5000);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    try {\r\n      // Get the current array from storage\r\n      window.chrome.storage.sync.get(\r\n        [\"history\"],\r\n        (result: chromeStoragePropsType) => {\r\n          let pHistory = result.history || [];\r\n\r\n          // Modify the array. For example, delete/remove all those objects which time's value present in selectedHistoryItem\r\n          const deleteHistoryItem = pHistory.filter(\r\n            (item) => !selectHistoryItem.includes(item.time)\r\n          );\r\n\r\n          // Store the updated array back in storage\r\n          window.chrome.storage.sync.set({ history: deleteHistoryItem }, () => {\r\n            setHistoryData(deleteHistoryItem.reverse()); // Update state with the reversed array\r\n            setSelectHistoryItem([]); // Update state with the reversed array\r\n          });\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      // Store the updated array back in storage\r\n      window.chrome.storage.sync.get(\r\n        [\"history\"],\r\n        (result: chromeStoragePropsType) => {\r\n          setHistoryData(result.history.reverse());\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Paper\r\n        elevation={0}\r\n        sx={{\r\n          borderRadius: 4,\r\n          backgroundColor: palette.background.paper,\r\n          position: \"relative\",\r\n          top: 0,\r\n          width: \"100%\",\r\n          transition: \".3s\",\r\n          // maxHeight: \"600px\",\r\n          zIndex: activeWindow.tab === HISTORY ? 5 : 0,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          overflow: \"hidden\",\r\n          animationDuration: activeWindow.timer || 0,\r\n        }}\r\n        className={`${\r\n          activeWindow.tab === HISTORY && !page && \"windowSlideStartRight\"\r\n        } ${activeWindow.timer && !page && \"windowSlideEndRight\"} `}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            p: 1,\r\n          }}\r\n        >\r\n          <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <WindowBack page={page} />\r\n            <Typography\r\n              variant=\"h2\"\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                gap: 1,\r\n                fontSize: \"1rem\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              History\r\n              <span className=\"verticalDivider\"></span>\r\n              {selectHistoryItem.length} / {historyData.length}\r\n            </Typography>\r\n          </Box>\r\n          <Box sx={{}}>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleDelete}\r\n              title=\"Delete history\"\r\n              sx={{\r\n                gap: 1,\r\n                borderRadius: 2,\r\n                minWidth: 0,\r\n                bgcolor: \"red\",\r\n                p: small ? 0.5 : \"auto\",\r\n                fontWeight: \"bold\",\r\n                \":hover\": { bgcolor: \"rgb(140, 0, 0)\" },\r\n              }}\r\n            >\r\n              {!small && \"Delete\"}\r\n              <DeleteIcon />\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <hr />\r\n\r\n        {historyData.length > 0 && (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              p: 1,\r\n              px: 2,\r\n            }}\r\n          >\r\n            <div></div>\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <Typography\r\n                variant=\"h3\"\r\n                sx={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  gap: 1,\r\n                  fontSize: \".9rem\",\r\n                  px: 1,\r\n                }}\r\n              >\r\n                Select All\r\n              </Typography>\r\n\r\n              <Checkbox\r\n                checked={selectHistoryItem.length === historyData.length}\r\n                onChange={handleSelectAll}\r\n                inputProps={{ \"aria-label\": \"controlled\" }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        )}\r\n        <hr />\r\n\r\n        {historyData?.length === 0 ? (\r\n          <Typography sx={{ p: 2, textAlign: \"center\" }}>\r\n            No record found.\r\n          </Typography>\r\n        ) : (\r\n          <List dense>\r\n            {historyData.map((item, i) => {\r\n              const time = new Date(item.time);\r\n              return (\r\n                item.password.length > 0 && (\r\n                  <ListItem\r\n                    alignItems=\"center\"\r\n                    key={i}\r\n                    sx={{\r\n                      borderBottom: 0.5,\r\n                      borderColor: \"rgb(150, 150, 150, .1)\",\r\n                    }}\r\n                  >\r\n                    <ListItemText\r\n                      primary={\r\n                        <span\r\n                          style={{\r\n                            fontWeight: \"bold\",\r\n                            paddingBottom: \".5rem\",\r\n                            fontSize: \"1rem\",\r\n                          }}\r\n                        >\r\n                          {item.password}\r\n                        </span>\r\n                      }\r\n                      sx={{ fontSize: \"1rem\", fontWeight: \"bold\" }}\r\n                      secondary={\r\n                        <>\r\n                          <Typography\r\n                            sx={{ display: \"inline\" }}\r\n                            component=\"span\"\r\n                            variant=\"body2\"\r\n                            color=\"text.primary\"\r\n                            fontSize={\"0.8rem\"}\r\n                          >\r\n                            {\"Password strength —  \"}\r\n                          </Typography>\r\n                          <span\r\n                            style={{\r\n                              display: \"inline\",\r\n                              color: item.strength.color,\r\n                            }}\r\n                          >\r\n                            {item.strength.message}\r\n                          </span>\r\n                          <span style={{ opacity: 0.7, display: \"block\" }}>\r\n                            Time:- {time.toLocaleTimeString()}\r\n                          </span>\r\n                        </>\r\n                      }\r\n                    />\r\n\r\n                    <Box\r\n                      sx={{\r\n                        display: \"flex\",\r\n                        gap: 2,\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          handleCopy({ id: item.time, password: item.password })\r\n                        }\r\n                        title={`${\r\n                          copyPassword.id === item.time ? \"Copied\" : \"Copy\"\r\n                        }`}\r\n                        sx={{\r\n                          p: \".5\",\r\n                          m: 0,\r\n                          minWidth: \"0\",\r\n                          borderRadius: 2,\r\n                          color: `${\r\n                            copyPassword.id === item.time ? \"green\" : \"\"\r\n                          }`,\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <ContentPasteIcon />\r\n                      </IconButton>\r\n                      <span className=\"verticalDivider\"></span>\r\n                      <Checkbox\r\n                        checked={selectHistoryItem.includes(item.time)}\r\n                        onChange={() => handleHistoryItemSelection(item.time)}\r\n                        inputProps={{ \"aria-label\": \"controlled\" }}\r\n                      />\r\n                    </Box>\r\n                  </ListItem>\r\n                )\r\n              );\r\n            })}\r\n          </List>\r\n        )}\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default History;\r\n","import { Container, IconButton, Link, Paper, useTheme } from \"@mui/material\";\r\nimport { setWindowName } from \"../RTK/slices/toggleWindow\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { HISTORY, SETTINGS } from \"../RTK/type\";\r\nimport { RootState } from \"../RTK/store\";\r\n\r\nimport PasswordGenerator from \"../components/password/PasswordGenerator\";\r\nimport SettingsIcon from \"@mui/icons-material/Settings\";\r\nimport HistoryIcon from \"@mui/icons-material/History\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Settings from \"./Tabs/Settings\";\r\nimport History from \"./Tabs/History\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nfunction Home() {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const {\r\n    historyProps: { bookmark },\r\n    activeWindow,\r\n  } = useSelector((state: RootState) => state);\r\n\r\n  const palette = theme.palette;\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth={\"sm\"} sx={{ p: 1 }}>\r\n        <Paper\r\n          elevation={0}\r\n          sx={{\r\n            background: palette.background.default,\r\n            opacity: 1,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              p: 1,\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                gap: 1,\r\n              }}\r\n            >\r\n              <img src=\"/logo32.png\" alt=\"brand logo\" width={24} />\r\n              <Typography\r\n                variant=\"h1\"\r\n                sx={{\r\n                  fontSize: \"1rem\",\r\n                  fontWeight: \"bold\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                Password Generator\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Box>\r\n              {bookmark && (\r\n                <IconButton\r\n                  title=\"History\"\r\n                  onClick={() => dispatch(setWindowName({ tab: HISTORY }))}\r\n                >\r\n                  <HistoryIcon />\r\n                </IconButton>\r\n              )}\r\n              <IconButton\r\n                title=\"Settings\"\r\n                onClick={() => dispatch(setWindowName({ tab: SETTINGS }))}\r\n              >\r\n                <SettingsIcon />\r\n              </IconButton>\r\n            </Box>\r\n          </Box>\r\n\r\n          {/* --------------------- */}\r\n          <Box\r\n            sx={{\r\n              minHeight: \"400px\",\r\n              overflow: \"hidden\",\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            {!activeWindow.tab && <PasswordGenerator />}\r\n            {activeWindow.tab === HISTORY && <History />}\r\n            {activeWindow.tab === SETTINGS && <Settings />}\r\n          </Box>\r\n          {/* --------------------- */}\r\n          <Box sx={{ textAlign: \"center\", py: 1 }}>\r\n            <Link href={\"https://password.ome9a.com\"} target=\"_blank\">\r\n              Explore more\r\n            </Link>\r\n          </Box>\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"names":["password","RED","score","forEach","regex","test","strength","message","color","level","len","length","attributes","charset","characters","upper","lower","symbol","number","salt","passwordStrength","Array","isArray","i","Math","floor","random","saltAt","midIndex","substring","_copyToClipboard","_asyncToGenerator","_regeneratorRuntime","mark","_callee","text","wrap","_context","prev","next","navigator","clipboard","writeText","console","info","abrupt","t0","error","stop","apply","arguments","_x","PrettoSlider","styled","Slider","height","border","width","backgroundColor","boxShadow","display","lineHeight","fontSize","background","padding","borderRadius","transformOrigin","transform","theme","useTheme","dispatch","useDispatch","_useSelector","useSelector","state","activeWindow","_useSelector$settingP","settingProps","pp","passwordAttributes","_useState","useState","time","_useState2","_slicedToArray","newPassword","setNewPassword","_useState3","_useState4","isCopy","setCopy","small","useMediaQuery","breakpoints","down","mode","palette","concat","DARK","handleCopy","_ref","copyToClipboard","t1","sent","setTimeout","_jsx","_Fragment","children","Paper","elevation","sx","paper","position","transition","zIndex","tab","animationDuration","timer","className","_jsxs","Stack","spacing","p","Box","justifyContent","alignItems","Typography","variant","fontWeight","gap","IconButton","onClick","title","m","minWidth","ContentPasteIcon","t","Date","x","generatePassword","_objectSpread","toISOString","window","chrome","storage","sync","get","result","pHistory","history","push","set","primary","bgcolor","main","FaDice","px","opacity","InfoIcon","style","Button","setPasswordAttributes","RotateLeftIcon","valueLabelDisplay","value","min","max","pt","onChange","e","nValue","FormControlLabel","control","Checkbox","label","labelPlacement","checked","pl","TextField","id","fullWidth","target","fieldset","FormControl","FormLabel","RadioGroup","row","name","Radio","themeMode","ml","setThemeMode","Brightness7Icon","Brightness4Icon","_ref$timer","setWindowName","page","backToMainTab","NavigateBeforeIcon","followUs","url","icon","BiLogoTwitter","BiLogoGithub","BiLogoLinkedin","BiLogoFigma","BiWorld","List","map","item","ListItem","Fab","size","default","rel","href","shareUrl","encodeURIComponent","open","FacebookIcon","TwitterIcon","clipStatus","setClipStatus","handleClick","BiLink","shareUs","TwitterShare","FacebookShare","UrlShare","bookmark","historyProps","top","SETTINGS","flexDirection","overflow","WindowBack","ListItemText","secondary","React","component","ThemeSwitch","borderBottom","borderColor","toggleHistoryBookmark","inputProps","mt","setSalt","Share","Social","_ref$page","selectHistoryItem","setSelectHistoryItem","historyData","setHistoryData","_useState5","_useState6","copyPassword","setCopyPassword","_ref3","_ref2","useEffect","reverse","HISTORY","deleteHistoryItem","filter","includes","DeleteIcon","allHistoryId","textAlign","dense","paddingBottom","toLocaleTimeString","historyId","uncheck","_toConsumableArray","handleHistoryItemSelection","Container","maxWidth","src","alt","HistoryIcon","SettingsIcon","minHeight","PasswordGenerator","History","Settings","py","Link"],"sourceRoot":""}